<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.weltraumschaf.organization</groupId>
        <artifactId>organization-parent</artifactId>
        <version>3.0.0-SNAPSHOT</version>
    </parent>

    <groupId>de.weltraumschaf.maconha</groupId>
    <artifactId>maconha</artifactId>
    <packaging>jar</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <name>Maconha</name>
    <description>Search engine for my NAS.</description>

    <developers>
        <developer>
            <id>Weltraumschaf</id>
            <name>Sven Strittmatter</name>
            <email>ich@weltraumschaf.de</email>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>THE BEER-WARE LICENSE</name>
            <url>http://www.weltraumschaf.de/the-beer-ware-license.txt</url>
            <distribution>repo</distribution>
            <comments>
                LICENSE

                "THE BEER-WARE LICENSE" (Revision 42):
                "Sven Strittmatter" &lt;weltraumschaf(at)googlemail(dot)com&gt; wrote this file.
                As long as you retain this notice you can do whatever you want with
                this stuff. If we meet some day, and you think this stuff is worth it,
                you can buy me a beer in return.
            </comments>
        </license>
    </licenses>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/Weltraumschaf/maconha/issues</url>
    </issueManagement>

    <scm>
        <connection>scm:git:git://github.com/Weltraumschaf/maconha.git</connection>
        <developerConnection>scm:git:git@github.com:Weltraumschaf/maconha.git</developerConnection>
        <url>https://github.com/Weltraumschaf/maconha.git</url>
    </scm>

    <distributionManagement>
        <site>
            <id>github-project-site</id>
            <url>gitsite:git@github.com/Weltraumschaf/cay-the.git</url>
        </site>
    </distributionManagement>

    <ciManagement>
        <system>jenkins</system>
        <url>https://ci.weltraumschaf.de/job/cay-the/</url>
    </ciManagement>

    <properties>
        <enforcer.skip>true</enforcer.skip>

        <project.build.version.source>1.8</project.build.version.source>
        <project.build.version.target>${project.build.version.source}</project.build.version.target>
        <java.version>${project.build.version.source}</java.version>

        <project.bin.directory>${project.basedir}/bin</project.bin.directory>
        <project.scripts.directory>${project.basedir}/src/main/scripts</project.scripts.directory>

        <!-- Dependency versions: -->
        <springframework.version>1.5.2.RELEASE</springframework.version>
        <vaadin.version>8.0.4</vaadin.version>
        <validation-api.version>1.1.0.Final</validation-api.version>
        <dbunit.version>2.5.3</dbunit.version>
        <usertype.core.version>5.0.0.GA</usertype.core.version>
        <commons.version>2.2.0</commons.version>
        <strman.version>0.2.0</strman.version>
        <reflections.version>0.9.10</reflections.version>
        <javax.servlet.jsp-api.version>2.3.1</javax.servlet.jsp-api.version>
        <rest-assured.version>3.0.1</rest-assured.version>
    </properties>

    <!-- http://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-build-systems.html -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springframework.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.vaadin.spring.extensions</groupId>
                <artifactId>vaadin-spring-ext-boot</artifactId>
                <version>2.0.0.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.vaadin.spring.addons</groupId>
                <artifactId>vaadin-spring-addon-eventbus</artifactId>
                <version>2.0.0.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.vaadin</groupId>
                <artifactId>viritin</artifactId>
                <version>2.0.beta1</version>
            </dependency>
            <dependency>
                <groupId>org.vaadin.teemu</groupId>
                <artifactId>switch</artifactId>
                <version>3.0.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>spring-milestone</id>
            <url>https://repo.spring.io/libs-release</url>
        </repository>

        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestone</id>
            <url>https://repo.spring.io/libs-release</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- Vaadin https://github.com/mstahv/spring-data-vaadin-crud/blob/master/pom.xml -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.vaadin.spring.extensions</groupId>
            <artifactId>vaadin-spring-ext-boot</artifactId>
        </dependency>
        <dependency>
            <groupId>org.vaadin.spring.addons</groupId>
            <artifactId>vaadin-spring-addon-eventbus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.vaadin</groupId>
            <artifactId>viritin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.vaadin.teemu</groupId>
            <artifactId>switch</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <!-- We use Logback for logging. -->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
                <exclusion>
                    <!-- We use Jetty because it is cooler ;) -->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!--        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- JSON -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- jsr303 validation -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${validation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!-- Joda-Time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <!-- To map JodaTime with database type -->
        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>${usertype.core.version}</version>
        </dependency>

        <!-- MySQL -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>validate</artifactId>
            <version>${commons.version}</version>
        </dependency>

        <!-- String utility -->
        <dependency>
            <groupId>com.shekhargulati</groupId>
            <artifactId>strman</artifactId>
            <version>${strman.version}</version>
        </dependency>

        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
        </dependency>

        <!-- Provided from container -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>${javax.servlet.jsp-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Testing dependencies -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>${dbunit.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>testing</artifactId>
            <version>${commons.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest-assured.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>maconha</finalName>

        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>

                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.bin.directory}</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>

                <executions>
                    <execution>
                        <id>add-test-source</id>

                        <phase>generate-test-sources</phase>

                        <goals>
                            <goal>add-test-source</goal>
                        </goals>

                        <configuration>
                            <sources>
                                <source>src/it/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Dspring.profiles.active=test</argLine>
                </configuration>
            </plugin>

            <plugin>
                <!-- http://maven.apache.org/surefire/maven-failsafe-plugin/usage.html -->
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>

                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.19.1</version>
                    </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- http://wiki.netbeans.org/MavenCodeCoverage -->
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes />
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${springframework.version}</version>

                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>springloaded</artifactId>
                        <version>1.2.6.RELEASE</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <!--
                        Due to a change in the failsafe plugin the project artifact (jar) is on classpath instead of
                        target/classes. The Spring Boot Maven plugin repackages this jar and failsafe plugin does not
                        know which one to use (original or repackaged). So this is a workaround: The repackaged
                        jar gets a classifier so that failsafe plugin can pick up the original one.

                        See: https://github.com/spring-projects/spring-boot/issues/6254

                        Will be fixed in failsafe plugin 2.19.2
                    -->
                    <classifier>exec</classifier>
                    <fork>true</fork>
                    <executable>true</executable>
                    <!-- For debugging: -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 -->
                    <jvmArguments>
                        -Dspring.profiles.active=dev
                    </jvmArguments>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.version}</version>

                <executions>
                    <execution>
                        <goals>
                            <goal>update-widgetset</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <widgetsetMode>cdn</widgetsetMode>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.4</version>

                <configuration>
                    <nodeVersion>v6.10.2</nodeVersion>
                </configuration>

                <executions>
                    <execution>
                        <id>install-node-and-npm</id>

                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>npm-install</id>

                        <goals>
                            <goal>npm</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>bower-install</id>

                        <goals>
                            <goal>bower</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>

                <executions>
                    <execution>
                        <id>copy-scripts-for-install</id>
                        <phase>install</phase>

                        <goals>
                            <goal>run</goal>
                        </goals>

                        <configuration>
                            <target>
                                <copy file="${project.build.directory}/${project.build.finalName}-exec.jar"
                                      tofile="${project.bin.directory}/${project.build.finalName}.jar"/>
                                <copy file="${project.scripts.directory}/${project.build.finalName}.sh"
                                      tofile="${project.bin.directory}/${project.build.finalName}"/>
                                <chmod dir="${project.bin.directory}" perm="ugo+rx"/>
                                <chmod perm="ugo+rx">
                                    <fileset dir="${project.bin.directory}">
                                        <include name="**/*"/>
                                        <exclude name="**/*.jar"/>
                                    </fileset>
                                </chmod>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.jeluard</groupId>
                <artifactId>plantuml-maven-plugin</artifactId>
                <version>1.2</version>

                <executions>
                    <execution>
                        <id>generate-uml-model-site</id>
                        <phase>pre-site</phase>

                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>net.sourceforge.plantuml</groupId>
                        <artifactId>plantuml</artifactId>
                        <version>8059</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <sourceFiles>
                        <directory>${basedir}/src/site/resources/plantuml</directory>
                        <includes>
                            <include>**/*.puml</include>
                        </includes>
                    </sourceFiles>

                    <outputDirectory>${project.build.directory}/site/images</outputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>

                <configuration>
                    <generateReports>true</generateReports>
                    <generateSitemap>false</generateSitemap>
                    <relativizeDecorationLinks>true</relativizeDecorationLinks>
                    <locales>de</locales>
                    <inputEncoding>UTF-8</inputEncoding>
                    <outputEncoding>UTF-8</outputEncoding>

                    <asciidoc>
                        <!-- optional site-wide AsciiDoc attributes -->
                        <attributes>
                            <icons>font</icons>
                            <source-highlighter>coderay</source-highlighter>
                            <coderay-css>style</coderay-css>
                            <toclevels>2</toclevels>
                        </attributes>
                    </asciidoc>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <version>1.5.3</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby-complete</artifactId>
                        <version>1.7.25</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>1.5.4.1</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>
